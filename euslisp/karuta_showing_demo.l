#!/usr/bin/env roseus
;; jsk-ros-pkg/jsk_demos/interactive_behavior_201409のコードを見ながら書いています。
(ros::load-ros-manifest "science_agora")

(ros::roseus-add-msgs "face_detector_mono")
(ros::roseus-add-msgs "nao_msgs") 
(ros::roseus-add-msgs "std_msgs")

(require :nao-interface "~/ros/groovy/science_agora/euslisp/nao-interface-kochigami.l")
(ros::roseus "karuta_showing_demo")
(ros::advertise "nao_learn_word" std_msgs::string 1)

;;initialization
;;for nao initialization
(ros::ros-info "nao initializing")
(setq *nao* (nao))
(setq *ni* (instance nao-interface :init))
(objects (list *nao*))

;;okマークを見せて
(setq ok #f(10.6325 14.4997 -75.9409 -60.1155 26.8925 84.9058 -13.7135 48.1623 59.3293 -7.82477 -14.4997 -4.74374 -39.7247 121.039 -67.9785 4.30665 -14.4997 4.22121 -39.9931 121.039 -67.97 -4.34702 -0.002404 0.612832))

;;ok 
(setq ok_pose #f(83.4068 -3.34228 -65.5696 -59.6761 62.9281 85.4332 -6.59429 60.2913 59.8567 -10.6373 -14.7634 -5.35899 -43.7677 121.039 -67.9785 4.30665 -14.7634 4.04543 -43.7725 121.039 -67.97 -4.34702 -2.1997 6.15001))

;;first-pose
(setq *first-pose* #f(87.2741 -11.0768 -64.6907 -59.5003 63.4554 88.9488 -1.93602 59.1487 60.6477 -11.7799 -14.5876 -5.18321 -44.0313 121.039 -67.9785 4.29809 -14.5876 3.78175 -44.124 121.039 -67.97 -4.34702 -2.90283 -3.69386))

;; for conversation
(setq *character-list* nil)
(setq *call_num* 0)
(setq *pub_num* 0)
(setq *pre-japanese-char* "なかもりあきなだいすき")
(setq *nao_secret_num* 0)
(setq *launchpad_count* 0)
(setq *count_num* 1)
;;(setq *register-check* 10)
(setq *launchpad-input* 0)
;; for tactile-detect-cb
;;(setq *head_touch_count* 0) 
;;for karuta-detect-cb
(setq *karuta_sound_num* 0)
(setq *karuta_sound_num2* 0)

(defun nao-servo-on() 
  (send *ni* :servo-on)
  )

(defun nao-servo-off()
  (send *ni* :servo-off)
  )


(defun conversation (japanese-char)
  (let ((publish-msg nil))
    ;;ひらがなを一回だけ受け取る                                              
    ;;ひらがなをリストに追加する                                              
    (if (string= japanese-char "おわり")
	(progn
	  (setq *pub_num* (+ *pub_num* 1))
	  ;;"おわり"を1つ受け取ったら1度だけrostopic pubする  
	  (if (= *pub_num* 1)
	      (progn
		;;added
		;;added end
		(setq publish-msg (instance std_msgs::string :init))
		;;とりあえず、最初に認識した答えを登録する                   
		;;変える必要があるかも                                       
		(send publish-msg :data (elt *character-list* 0))
		(ros::publish "nao_learn_word" publish-msg)
		(setq *character-list* nil)
		(if (string= *pre-japanese-char* "おしまい")
		    (send *ni* :play-soundfile "/home/nao/wav_test/ok.wav")
		  )
		(setq *karuta_sound_num* 0)
		(setq *karuta_sound_num2* 0)
		;;test
		(send *ni* :angle-vector-sequence (list *first-pose* ok_pose  *first-pose*) (list 500 800 1100))
		;;test end
		(setq *call_num* 0)
		
		)
	    )
	  )
      (progn
        ;;入ってくるのが""ではなく文字だったらということ                      
	;;現状では全部の文字を書かないといけない・・・                        
        (if (or (string= japanese-char "あ") (string= japanese-char "い")
                (string= japanese-char "う") (string= japanese-char "え")
                (string= japanese-char "お") (string= japanese-char "か")
                (string= japanese-char "き") (string= japanese-char "く")
                (string= japanese-char "け") (string= japanese-char "こ")
                (string= japanese-char "さ") (string= japanese-char "し")
                (string= japanese-char "す") (string= japanese-char "せ")
                (string= japanese-char "そ") (string= japanese-char "た")
                (string= japanese-char "ち") (string= japanese-char "つ")
                (string= japanese-char "て") (string= japanese-char "と")
                (string= japanese-char "な") (string= japanese-char "に")
                (string= japanese-char "ぬ") (string= japanese-char "ね")
                (string= japanese-char "の") (string= japanese-char "は")
                (string= japanese-char "ひ") (string= japanese-char "ふ")
                (string= japanese-char "へ") (string= japanese-char "ほ")
                (string= japanese-char "ま") (string= japanese-char "み")
                (string= japanese-char "む") (string= japanese-char "め")
                (string= japanese-char "も") (string= japanese-char "や")
                (string= japanese-char "ゆ") (string= japanese-char "よ")
                (string= japanese-char "ら") (string= japanese-char "り")
                (string= japanese-char "る") (string= japanese-char "れ")
                (string= japanese-char "ろ") (string= japanese-char "わ")
                (string= japanese-char "を") (string= japanese-char "ん")
                (string= japanese-char "ていし") (string= japanese-char "おしまい")
		(string= japanese-char "が") (string= japanese-char "ぎ")
                (string= japanese-char "ぐ") (string= japanese-char "げ")
                (string= japanese-char "ご") (string= japanese-char "ざ")
                (string= japanese-char "じ") (string= japanese-char "ず")
                (string= japanese-char "ぜ") (string= japanese-char "ぞ")
                (string= japanese-char "だ") (string= japanese-char "ぢ")
                (string= japanese-char "づ") (string= japanese-char "で")
		(string= japanese-char "ど") (string= japanese-char "ば")
                (string= japanese-char "び") (string= japanese-char "ぶ")
                (string= japanese-char "べ") (string= japanese-char "ぼ")
                (string= japanese-char "ぱ") (string= japanese-char "ぴ")
                (string= japanese-char "ぷ") (string= japanese-char "ぺ")
                (string= japanese-char "ぽ") (string= japanese-char "ゃ")
                (string= japanese-char "ゅ") (string= japanese-char "ょ")
		(string= japanese-char "っ") (string= japanese-char "　")
                )
            (progn	      
	      ;;launchpadからの入力であればリストの最初に代入 (入力の修正用として作用)
	      (if (= *launchpad-input* 1)
		  (progn
		    ;;added
		    (setq *launchpad_count* 1)
		    ;;added end
		    (setf (elt *character-list* 0)  japanese-char)	  
		    (setq *launchpad-input* 0)
		    )
		)
	      ;;文字を一つずつ代入
              (setq *character-list* (append *character-list* (list japanese-char)))
	      ;;文字が前のと異なったら１回だけしゃべる
              (if (not (string= *pre-japanese-char* japanese-char))
                  (progn
                    (setq *call_num* 0)
                    )
                )
	      
   	      ;;added
              (if (= *call_num* 0)
                  (progn
		    ;;ファイルを全部Naoに入れてここにも記入
                    (if (string= japanese-char "あ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/a.wav")
		      )
                    (if (string= japanese-char "い")
                        (send *ni* :play-soundfile "/home/nao/wav_test/i.wav")
		      )
                    (if (string= japanese-char "う")
                        (send *ni* :play-soundfile "/home/nao/wav_test/u.wav"))
		    (if (string= japanese-char "え")
                        (send *ni* :play-soundfile "/home/nao/wav_test/e.wav")
		      )
                    (if (string= japanese-char "お")
                        (send *ni* :play-soundfile "/home/nao/wav_test/o.wav")
		      )
                    (if (string= japanese-char "か")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ka.wav"))
		    (if (string= japanese-char "き")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ki.wav")
		      )
                    (if (string= japanese-char "く")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ku.wav")
		      )
                    (if (string= japanese-char "け")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ke.wav"))
		    (if (string= japanese-char "こ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ko.wav")
		      )
                    (if (string= japanese-char "さ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/sa.wav")
		      )
                    (if (string= japanese-char "し")
                        (send *ni* :play-soundfile "/home/nao/wav_test/si.wav"))
		    (if (string= japanese-char "す")
                        (send *ni* :play-soundfile "/home/nao/wav_test/su.wav")
		      )
                    (if (string= japanese-char "せ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/se.wav")
		      )
                    (if (string= japanese-char "そ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/so.wav"))
		    (if (string= japanese-char "た")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ta.wav")
		      )
                    (if (string= japanese-char "ち")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ti.wav")
		      )
                    (if (string= japanese-char "つ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/tu.wav"))
		    (if (string= japanese-char "て")
                        (send *ni* :play-soundfile "/home/nao/wav_test/te.wav")
		      )
                    (if (string= japanese-char "と")
                        (send *ni* :play-soundfile "/home/nao/wav_test/to.wav")
		      )
                    (if (string= japanese-char "な")
                        (send *ni* :play-soundfile "/home/nao/wav_test/na.wav"))
		    (if (string= japanese-char "に")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ni.wav")
		      )
                    (if (string= japanese-char "ぬ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/nu.wav")
		      )
                    (if (string= japanese-char "ね")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ne.wav"))
		    (if (string= japanese-char "の")
                        (send *ni* :play-soundfile "/home/nao/wav_test/no.wav")
		      )
                    (if (string= japanese-char "は")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ha.wav")
		      )
                    (if (string= japanese-char "ひ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/hi.wav"))
		    (if (string= japanese-char "ふ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/hu.wav")
		      )
                    (if (string= japanese-char "へ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/he.wav")
		      )
                    (if (string= japanese-char "ほ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ho.wav"))
		    (if (string= japanese-char "ま")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ma.wav")
		      )
                    (if (string= japanese-char "み")
                        (send *ni* :play-soundfile "/home/nao/wav_test/mi.wav")
		      )
                    (if (string= japanese-char "む")
                        (send *ni* :play-soundfile "/home/nao/wav_test/mu.wav"))
		    (if (string= japanese-char "め")
                        (send *ni* :play-soundfile "/home/nao/wav_test/me.wav")
		      )
                    (if (string= japanese-char "も")
                        (send *ni* :play-soundfile "/home/nao/wav_test/mo.wav")
		      )
                    (if (string= japanese-char "や")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ya.wav"))
		    (if (string= japanese-char "ゆ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/yu.wav")
		      )
                    (if (string= japanese-char "よ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/yo.wav")
		      )
                    (if (string= japanese-char "ら")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ra.wav"))
		    (if (string= japanese-char "り")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ri.wav")
		      )
                    (if (string= japanese-char "る")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ru.wav")
		      )
                    (if (string= japanese-char "れ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/re.wav"))
		    (if (string= japanese-char "ろ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ro.wav")
		      )
                    (if (string= japanese-char "わ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/wa.wav")
		      )
                    (if (string= japanese-char "を")
                        (send *ni* :play-soundfile "/home/nao/wav_test/wo.wav"))
                    (if (string= japanese-char "ん")
                        (send *ni* :play-soundfile "/home/nao/wav_test/n.wav"))
		    (if (string= japanese-char "おしまい")
                        (send *ni* :play-soundfile "/home/nao/wav_test/oboeruyo_attetaraokmarkuwomisete.wav"))

		    ;;added
		    ;;音声ファイルを増やす
		    ;;濁点（ガ行　ザ行　ダ行）・小さい字（ゃ　ゅ　ょ　っ）・ぱぴぷぺぽ
		    (if (string= japanese-char "が")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ga.wav"))
		    (if (string= japanese-char "ぎ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/gi.wav"))
		    (if (string= japanese-char "ぐ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/gu.wav"))
		    (if (string= japanese-char "げ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ge.wav"))
		    (if (string= japanese-char "ご")
                        (send *ni* :play-soundfile "/home/nao/wav_test/go.wav"))
		    (if (string= japanese-char "ざ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/za.wav"))
		    (if (string= japanese-char "じ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/zi.wav"))
		    (if (string= japanese-char "ず")
                        (send *ni* :play-soundfile "/home/nao/wav_test/zu.wav"))
		    (if (string= japanese-char "ぜ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ze.wav"))
		    (if (string= japanese-char "ぞ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/zo.wav"))
		    (if (string= japanese-char "だ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/da.wav"))
		    (if (string= japanese-char "ぢ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/di.wav"))
		    (if (string= japanese-char "づ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/du.wav"))
		    (if (string= japanese-char "で")
                        (send *ni* :play-soundfile "/home/nao/wav_test/de.wav"))
		    (if (string= japanese-char "ど")
                        (send *ni* :play-soundfile "/home/nao/wav_test/do.wav"))
		    (if (string= japanese-char "ば")
                        (send *ni* :play-soundfile "/home/nao/wav_test/ba.wav"))
		    (if (string= japanese-char "び")
                        (send *ni* :play-soundfile "/home/nao/wav_test/bi.wav"))
		    (if (string= japanese-char "ぶ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/bu.wav"))
		    (if (string= japanese-char "べ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/be.wav"))
		    (if (string= japanese-char "ぼ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/bo.wav"))
		    ;;(if (string= japanese-char "　")
                        ;;(send *ni* :play-soundfile "/home/nao/wav_test/n.wav"))
		    (if (string= japanese-char "ゃ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/xya.wav"))
		    (if (string= japanese-char "ゅ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/xyu.wav"))
		    (if (string= japanese-char "ょ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/xyo.wav"))
		    (if (string= japanese-char "っ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/xtu.wav"))
		    (if (string= japanese-char "ぱ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/pa.wav"))
		    (if (string= japanese-char "ぴ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/pi.wav"))
		    (if (string= japanese-char "ぷ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/pu.wav"))
		    (if (string= japanese-char "ぺ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/pe.wav"))
		    (if (string= japanese-char "ぽ")
                        (send *ni* :play-soundfile "/home/nao/wav_test/po.wav"))
		    (if (string= japanese-char "　")
                        (send *ni* :play-soundfile "/home/nao/wav_test/jyaa_tsugi_no_hito.wav"))

		    ;;added end
		    

                    (setq *call_num* (+ *call_num* 1))
                    (setq *pre-japanese-char* japanese-char)
                    )
                )
              (setq *pub_num* 0)
              )
          )
        )
      )
    )
  )


(defun karuta-detect-cb (msg)
  (let ((point 0) (pointX 0) (pointY 0) (width 0) (height 0) 
	(current-pitch (send *nao* :head :neck-p :joint-angle))
	(current-yaw   (send *nao* :head :neck-y :joint-angle))
	(next-pitch 0) (next-yaw 0) (y-k 0.08) (p-k 0.05) (radius 100))
    (when (send msg :rects) 
      (setq point (car (send msg :rects)))
      (setq pointX (send point :x))
      (setq pointY (send point :y))
      (setq width (send point :width))
      (setq height (send point :height))
      ;;(set-behavior :eyecontact)
      (send *nao* :angle-vector (send *ni* :state :potentio-vector))
      (setq current-pitch (send *nao* :head :neck-p :joint-angle))
      (setq current-yaw   (send *nao* :head :neck-y :joint-angle))
      
      (if (> (+ (expt (- pointX 320) 2) (expt (- pointY 240) 2)) (expt radius 2))
	  (progn
	    (if (> pointX 320)
		(send *nao* :head :neck-y :joint-angle (- current-yaw (* y-k (- pointX 320))))
	      (send *nao* :head :neck-y :joint-angle (+ current-yaw (* y-k (- 320 pointX)))))
	    (if (> pointY 240)
		(send *nao* :head :neck-p :joint-angle (+ current-pitch (* p-k (- pointY 240))))
	      (send *nao* :head :neck-p :joint-angle (- current-pitch (* p-k (- 240 pointY)))))		
	    (setq next-pitch (send *nao* :head :neck-p :joint-angle))
	    (setq next-yaw   (send *nao* :head :neck-y :joint-angle))
	    (let ((diff (max (abs (- next-pitch current-pitch))
			     (abs (- next-yaw current-yaw)))))
	      (let ((tm (/ diff 40.0)))
		(send *ni* :angle-vector (send *nao* :angle-vector) (* 1000.0 tm))
		)
	      )
	    )
	)
      (if (or (> width 400) (> height 500))
	  (progn
	    (if (= *karuta_sound_num* 0)
		(progn
		  (send *ni* :play-soundfile "/home/nao/wav_test/motto_toozakete.wav")
		  (setq *karuta_sound_num* (+ *karuta_sound_num* 1))
		  )
	      
	      )
	    )
	)
      (if (or (< width 150) (< height 250))
	  (progn
	    (if (= *karuta_sound_num2* 0)
		(progn
		  (send *ni* :play-soundfile "/home/nao/wav_test/motto_chikazukete.wav")
		  (setq *karuta_sound_num2* (+ *karuta_sound_num2* 1))
		  )
	      )
	    )
	)
      
      
      )
    )
  )


(defun character-detect-cb (msg)
  (let ((japanese-char 0))
	;;読み取ったひらがなを返す
	(progn
	  (setq japanese-char (send msg :data))
	  (conversation japanese-char)
	  )	
	)
  )

(defun launchpad-cb (msg)
  (let ((japanese-char 0))
	;;読み取ったひらがなを返す
	(progn
	  (setq japanese-char (send msg :data))   
	  (setq *launchpad-input* 1)
	  (conversation japanese-char)
	  )
	)
  )

(ros::subscribe "/nao_character_learn" std_msgs::String  #'character-detect-cb)
(ros::subscribe "/hiragana_send_to_nao" std_msgs::String #'launchpad-cb)
(ros::subscribe "/nao_karuta_size" face_detector_mono::RectArray #'karuta-detect-cb)


;;main loopを回す
(ros::ros-info "Let's start")
;;(ros::rate 5)

(send *ni* :play-soundfile "/home/nao/wav_test/onamaeha.wav")
(while (ros::ok)
  (nao-servo-on)
  (ros::spin-once)
  (ros::sleep)
)

